#! /bin/sh
##
## Startup script for the amond Daemon
## (C) Copyright 2003-2007 Fred Gleason <fredg@paravelsystems.com>
##
##    This program is free software; you can redistribute it and/or modify
##    it under the terms of version 2 of the GNU General Public License as
##    published by the Free Software Foundation;
##
##    This program is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with this program; if not, write to the Free Software
##    Foundation, Inc., 59 Temple Place, Suite 330, 
##    Boston, MA  02111-1307  USA
##

# chkconfig: 35 65 35
# description: AMon amond daemons
# config: /etc/amond.conf

### BEGIN INIT INFO
# Provides:          amond
# Required-Start:    $network
# Required-Stop:     $network
# Default-Start:     2 3 5
# Default-Stop:      0 1 6
# Description:       Start the AMon amond daemon
### END INIT INFO

#
# If the LSB Init functions exist, use them, otherwise roll our own
#
if test -f /lib/lsb/init-functions ; then
  . /lib/lsb/init-functions
else
  function log_success_msg() {
    echo "$1 ... done."
  }
  function log_failure_msg() {
    echo "$1 ... done."
  }
fi

#
# Package Definitions
#
PACKAGE_BIN=@LOCAL_PREFIX@/sbin/amond
PACKAGE_PID=/var/run/amond.pid
PACKAGE_NAME="AMon Audio Monitoring Daemon"

# Check for missing binaries
if [ ! -x $PACKAGE_BIN ] ; then
  echo "$PACKAGE_BIN not installed"
  exit 5
fi

#
# Set the mixers to a sane state
#
/usr/bin/amixer -q -c 0 set ADC,0 127
/usr/bin/amixer -q -c 0 set ADC,1 127
/usr/bin/amixer -q -c 0 set ADC,2 127
/usr/bin/amixer -q -c 0 set ADC,3 127
/usr/bin/amixer -q -c 0 set ADC,4 127
/usr/bin/amixer -q -c 0 set ADC,5 127
/usr/bin/amixer -q -c 0 set ADC,6 127
/usr/bin/amixer -q -c 0 set ADC,7 127
/usr/bin/amixer -q -c 0 set DAC,0 127
/usr/bin/amixer -q -c 0 set DAC,1 127
/usr/bin/amixer -q -c 0 set DAC,2 127
/usr/bin/amixer -q -c 0 set DAC,3 127
/usr/bin/amixer -q -c 0 set DAC,4 127
/usr/bin/amixer -q -c 0 set DAC,5 127
/usr/bin/amixer -q -c 0 set DAC,6 127
/usr/bin/amixer -q -c 0 set DAC,7 127
/usr/bin/amixer -q -c 0 set 'Multi Track Internal Clock',0 '44100'
/usr/bin/amixer -q -c 1 set ADC,0 127
/usr/bin/amixer -q -c 1 set ADC,1 127
/usr/bin/amixer -q -c 1 set ADC,2 127
/usr/bin/amixer -q -c 1 set ADC,3 127
/usr/bin/amixer -q -c 1 set ADC,4 127
/usr/bin/amixer -q -c 1 set ADC,5 127
/usr/bin/amixer -q -c 1 set ADC,6 127
/usr/bin/amixer -q -c 1 set ADC,7 127
/usr/bin/amixer -q -c 1 set DAC,0 127
/usr/bin/amixer -q -c 1 set DAC,1 127
/usr/bin/amixer -q -c 1 set DAC,2 127
/usr/bin/amixer -q -c 1 set DAC,3 127
/usr/bin/amixer -q -c 1 set DAC,4 127
/usr/bin/amixer -q -c 1 set DAC,5 127
/usr/bin/amixer -q -c 1 set DAC,6 127
/usr/bin/amixer -q -c 1 set DAC,7 127
/usr/bin/amixer -q -c 1 set 'Multi Track Internal Clock',0 '44100'
/usr/bin/amixer -q -c 2 set ADC,0 127
/usr/bin/amixer -q -c 2 set ADC,1 127
/usr/bin/amixer -q -c 2 set ADC,2 127
/usr/bin/amixer -q -c 2 set ADC,3 127
/usr/bin/amixer -q -c 2 set ADC,4 127
/usr/bin/amixer -q -c 2 set ADC,5 127
/usr/bin/amixer -q -c 2 set ADC,6 127
/usr/bin/amixer -q -c 2 set ADC,7 127
/usr/bin/amixer -q -c 2 set DAC,0 127
/usr/bin/amixer -q -c 2 set DAC,1 127
/usr/bin/amixer -q -c 2 set DAC,2 127
/usr/bin/amixer -q -c 2 set DAC,3 127
/usr/bin/amixer -q -c 2 set DAC,4 127
/usr/bin/amixer -q -c 2 set DAC,5 127
/usr/bin/amixer -q -c 2 set DAC,6 127
/usr/bin/amixer -q -c 2 set DAC,7 127
/usr/bin/amixer -q -c 2 set 'Multi Track Internal Clock',0 '44100'
/usr/bin/amixer -q -c 3 set ADC,0 127
/usr/bin/amixer -q -c 3 set ADC,1 127
/usr/bin/amixer -q -c 3 set ADC,2 127
/usr/bin/amixer -q -c 3 set ADC,3 127
/usr/bin/amixer -q -c 3 set ADC,4 127
/usr/bin/amixer -q -c 3 set ADC,5 127
/usr/bin/amixer -q -c 3 set ADC,6 127
/usr/bin/amixer -q -c 3 set ADC,7 127
/usr/bin/amixer -q -c 3 set DAC,0 127
/usr/bin/amixer -q -c 3 set DAC,1 127
/usr/bin/amixer -q -c 3 set DAC,2 127
/usr/bin/amixer -q -c 3 set DAC,3 127
/usr/bin/amixer -q -c 3 set DAC,4 127
/usr/bin/amixer -q -c 3 set DAC,5 127
/usr/bin/amixer -q -c 3 set DAC,6 127
/usr/bin/amixer -q -c 3 set DAC,7 127
/usr/bin/amixer -q -c 3 set 'Multi Track Internal Clock',0 '44100'

case "$1" in
    start)
	if test ! -f $PACKAGE_PID ; then
	    $PACKAGE_BIN
	    sleep 1
	else 
	    if test ! -d /proc/`cat $PACKAGE_PID` ; then
		$PACKAGE_BIN
		sleep 1
	    fi
	fi
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		log_success_msg "Starting $PACKAGE_NAME"
		exit 0
	    else
		log_failure_msg "Starting $PACKAGE_NAME"
		exit 1
	    fi
	else
	    log_failure_msg "Starting $PACKAGE_NAME"
	    exit 1
	fi
	;;
    stop)
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		kill `cat $PACKAGE_PID`
		killall amond
		sleep 1
	    fi
	fi
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		log_failure_msg "Shutting down $PACKAGE_NAME"
		exit 1
	    else
		log_success_msg "Shutting down $PACKAGE_NAME"
		exit 0
	    fi
	else
	    log_success_msg "Shutting down $PACKAGE_NAME"
	    exit 0
	fi
	;;
    restart)
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		kill `cat $PACKAGE_PID`
		killall amond
		sleep 1
	    fi
	fi
	$PACKAGE_BIN
	sleep 1
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		log_success_msg "Restarting $PACKAGE_NAME"
		exit 0
	    else
		log_success_msg "Restarting $PACKAGE_NAME"
		exit 1
	    fi
	else
	    echo "failed."
	    exit 1
	fi
	;;
    force-reload)
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		kill `cat $PACKAGE_PID`
		killall amond
		sleep 1
	    fi
	fi
	$PACKAGE_BIN
	sleep 1
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		log_success_msg "Reloading $PACKAGE_NAME"
		exit 0
	    else
		log_failure_msg "Restarting $PACKAGE_NAME"
		exit 1
	    fi
	else
	    log_failure_msg "Restarting $PACKAGE_NAME"
	    exit 1
	fi
	;;
    status)
	echo -n "Checking for $PACKAGE_NAME..."
	if test -f $PACKAGE_PID ; then
	    if test -d /proc/`cat $PACKAGE_PID` ; then
		echo "running."
		exit 0
	    else
		echo "stale PID file."
		exit 1
	    fi
	else
	    echo "stopped."
	    exit 3
	fi
	;;
esac


# End of rc.amond
